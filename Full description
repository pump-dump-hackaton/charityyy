Our smart contract solves the problem of transparent, conditional fundraising. It allows donors to contribute to a proposal containing one or more intended expenses.
The contract holds these funds until a predefined goal amount is reached, at which point the funds can be distributed to the intended recipients (such as businesses or service providers).

The goal is to create trust in how donations are handled, making sure contributors know the funds won’t be spent unless the full amount is raised, and will be distributed only as defined
in the proposal.

To build this, we wrote our smart contract in Solidity and deployed it on Moonbeam, an EVM-compatible parachain within the Polkadot ecosystem. This allowed us to write Ethereum-style
smart contracts while leveraging Polkadot’s multi-chain architecture and scalability.

How Polkadot was used: While we didn’t write the contract using native Substrate or Ink!, by deploying on Moonbeam we effectively placed our smart contract inside the Polkadot ecosystem.
This means our contract benefits from Polkadot's features like shared security, interoperability with other parachains, and the potential to interact with other projects in the Polkadot
network in future iterations.

This approach allowed us to rapidly prototype and deploy using familiar tools (like Remix and Solidity), while still launching on a network that aligns with Polkadot's decentralized and
scalable infrastructure.
